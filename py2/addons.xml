<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
    <addons>
<addon id="repository.castagnait" name="CastagnaIT Repository for Kodi 18.x (LEIA)" version="1.0.1" provider-name="castagnait">
	<extension point="xbmc.addon.repository" name="CastagnaIT Repository">
		<dir>
			<info>https://github.com/CastagnaIT/repository.castagnait/raw/master/addons.xml</info>
			<checksum>https://github.com/CastagnaIT/repository.castagnait/raw/master/addons.xml.md5</checksum>
			<datadir zip="true">https://github.com/CastagnaIT/repository.castagnait/raw/master/zip</datadir>
		</dir>
	</extension>
	<extension point="xbmc.addon.metadata">
		<summary>CastagnaIT Repository for Kodi 18.x (LEIA)</summary>
		<description>Castagna IT repository for Kodi 18.x add-ons</description>
		<platform>all</platform>
		<assets>
			<icon>icon.jpg</icon>
		</assets>
	</extension>
</addon>
<addon id="repository.sandmann79.plugins" name="Sandmann79s Repository Leia" version="1.0.3" provider-name="Sandmann79">
	<extension point="xbmc.addon.repository" name="Sandmann79s Repository Leia">
		<info compressed="false">https://raw.githubusercontent.com/Sandmann79/xbmc/master/packages/addons.xml</info>
		<checksum>https://raw.githubusercontent.com/Sandmann79/xbmc/master/packages/addons.xml.md5</checksum>
		<datadir zip="true">https://raw.githubusercontent.com/Sandmann79/xbmc/master/packages/</datadir>
	</extension>
	<extension point="xbmc.addon.metadata">
		<summary>Various Addons for Kodi 18 and below</summary>
		<description></description>
		<disclaimer></disclaimer>
		<platform>all</platform>
	</extension>
</addon>
<addon id="script.playlist.helper" name="Playlist Helper" version="0.0.08" provider-name="marduk">
	<requires>
		<import addon="xbmc.python" version="2.6.0"/>
	</requires>
	<extension point="kodi.context.item">
		<menu id="kodi.core.main">
			<item library="context_playlistcontainer_fn_minus.py">
				<label>$LOCALIZE[13332]</label>
				<visible>string.isequal(window(home).property(playlist_itemcontrol),enable)</visible>
			</item>
			<item library="context_playlistcontainer_fn_plus.py">
				<label>$LOCALIZE[13333]</label>
				<visible>string.isequal(window(home).property(playlist_itemcontrol),enable)</visible>
			</item>
			<item library="context_playlistcontainer_fn_delete.py">
				<label>$LOCALIZE[15015]</label>
				<visible>string.isequal(window(home).property(playlist_itemcontrol),enable)</visible>
			</item>
			<item library="context_playlist_queuing_insert.py">
				<label>$LOCALIZE[10008]</label>
				<visible>!Window.IsMedia + [String.IsEqual(ListItem.dbtype,artist) | String.IsEqual(ListItem.dbtype,album) | String.IsEqual(ListItem.dbtype,song) | String.IsEqual(ListItem.dbtype,year) | String.IsEqual(ListItem.dbtype,originalyear) | String.IsEqual(ListItem.dbtype,genre)]</visible>
			</item>
			<item library="context_playlist_queuing_add.py">
				<label>$LOCALIZE[13347]</label>
				<visible>!Window.IsMedia + [String.IsEqual(ListItem.dbtype,artist) | String.IsEqual(ListItem.dbtype,album) | String.IsEqual(ListItem.dbtype,song) | String.IsEqual(ListItem.dbtype,year) | String.IsEqual(ListItem.dbtype,originalyear) | String.IsEqual(ListItem.dbtype,genre)]</visible>
			</item>
			<item library="context_actions_playmedia_dir.py">
				<label>$LOCALIZE[22083]</label>
				<visible>[Window.IsMedia + Container.Content(Albums) + string.startswith(listitem.label, *)] | [!Window.IsMedia + [String.IsEqual(ListItem.DBtype,artist) | String.IsEqual(ListItem.DBtype,album)]]</visible>
			</item>
			<menu>
				<label>$ADDON[script.playlist.helper 32000]</label>
				<item library="context_actions_open_playlist.py">
					<label>$LOCALIZE[13350]</label>
					<visible>!Window.IsActive(MyPlaylist.xml) + [MusicPlayer.Offset(-1).Exists | MusicPlayer.Offset(1).Exists]</visible>
				</item>
				<item library="context_actions_save_playlist.py">
					<label>$LOCALIZE[190] $LOCALIZE[559]</label>
					<visible>!Window.IsActive(MyPlaylist.xml) + [MusicPlayer.Offset(-1).Exists | MusicPlayer.Offset(1).Exists]</visible>
				</item>
				<item library="context_actions_open_playercontrol.py">
					<label>$LOCALIZE[10114]</label>
					<visible>!Window.IsActive(playercontrols) + [Player.HasMedia + [MusicPlayer.Offset(-1).Exists | MusicPlayer.Offset(1).Exists]]</visible>
				</item>
			</menu>
		</menu>
	</extension>
	<extension point="xbmc.python.script" library="actions.py">
        <provides>executable</provides>
    </extension>
	<extension point="kodi.addon.metadata">
		<platform>all</platform>
		<summary lang="en_GB">Enable Playlist Functions for Contextmenu which currently not provided by Kodi core and provides select Actions for Skinners</summary>
		<description lang="en_GB">Enable Playlist Functions for Contextmenu which currently not provided by Kodi core and Provide select Actions for Skinners[CR]
Contextmenu
  • for skins, which use a dynamic container filled with currently playing playlist (playlistmusic:// ; playlistvideo://)
     - switch playlistitems (move up or down)
     - delete playlistitem

  • play all songs by artist
     - if either media window and on '. all albums' listitem entry, or if not media window for artist or album items (clears playlist, and start plaing folder)

  • activate playlist window
  • activate playercontrols dialog
  • save currently active playlist


Select Actions
  • play selected Song if container filled with (playlistmusic:// ; playlistvideo://)
  • conditional select actions for dynamic content containers in Custom Windows/Containers (directory or file)
     - add to playlist as next title and play item (default ~ !Skin.HasSetting(&lt; dbtype &gt;_select_queue))
     - add to playlist as next title (if Skin.HasSetting(&lt; dbtype &gt;_select_queue))

</description>
		<license>GPL-2.0-or-later</license>
		<forum></forum>
		<source>https://github.com/marduklev/script.playlist.helper</source>
		<assets>
			<icon>resources/icon.png</icon>
			<fanart>resources/fanart.png</fanart>
		</assets>
	</extension>
</addon>
<addon id="script.swan.helper" name="S W A N  helper scrips" version="0.0.05" provider-name="marduk">
	<requires>
		<import addon="xbmc.python" version="2.26.0" />
	</requires>
	<extension point="kodi.context.item">
		<menu id="kodi.core.main">
			<item library="contextmenu/context_playlistcontainer_fn_minus.py">
				<label>$LOCALIZE[13332]</label>
				<visible>string.isequal(window(home).property(playlist_itemcontrol),enable)</visible>
			</item>
			<item library="contextmenu/context_playlistcontainer_fn_plus.py">
				<label>$LOCALIZE[13333]</label>
				<visible>string.isequal(window(home).property(playlist_itemcontrol),enable)</visible>
			</item>
			<item library="contextmenu/context_playlistcontainer_fn_delete.py">
				<label>$LOCALIZE[15015]</label>
				<visible>string.isequal(window(home).property(playlist_itemcontrol),enable)</visible>
			</item>
			<item library="contextmenu/context_playlist_queuing_insert.py">
				<label>$LOCALIZE[10008]</label>
				<visible>!Window.IsMedia + [String.IsEqual(ListItem.dbtype,artist) | String.IsEqual(ListItem.dbtype,album) | String.IsEqual(ListItem.dbtype,song) | String.IsEqual(ListItem.dbtype,year) | String.IsEqual(ListItem.dbtype,originalyear) | String.IsEqual(ListItem.dbtype,genre)]</visible>
			</item>
			<item library="contextmenu/context_playlist_queuing_add.py">
				<label>$LOCALIZE[13347]</label>
				<visible>!Window.IsMedia + [String.IsEqual(ListItem.dbtype,artist) | String.IsEqual(ListItem.dbtype,album) | String.IsEqual(ListItem.dbtype,song) | String.IsEqual(ListItem.dbtype,year) | String.IsEqual(ListItem.dbtype,originalyear) | String.IsEqual(ListItem.dbtype,genre)]</visible>
			</item>
			<item library="contextmenu/context_actions_playmedia_dir.py">
				<label>$LOCALIZE[22083]</label>
				<visible>[Window.IsMedia + Container.Content(Albums) + string.startswith(listitem.label, *)] | [!Window.IsMedia + [String.IsEqual(ListItem.DBtype,artist) | String.IsEqual(ListItem.DBtype,album)]]</visible>
			</item>
			<menu>
				<label>$ADDON[script.swan.helper 32000]</label>
				<item library="contextmenu/context_actions_open_playlist.py">
					<label>$LOCALIZE[13350]</label>
					<visible>!Window.IsActive(MyPlaylist.xml) + [MusicPlayer.Offset(-1).Exists | MusicPlayer.Offset(1).Exists]</visible>
				</item>
				<item library="contextmenu/context_actions_save_playlist.py">
					<label>$LOCALIZE[190] $LOCALIZE[559]</label>
					<visible>!Window.IsActive(MyPlaylist.xml) + [MusicPlayer.Offset(-1).Exists | MusicPlayer.Offset(1).Exists]</visible>
				</item>
				<item library="contextmenu/context_actions_open_playercontrol.py">
					<label>$LOCALIZE[10114]</label>
					<visible>!Window.IsActive(playercontrols) + [Player.HasMedia + [MusicPlayer.Offset(-1).Exists | MusicPlayer.Offset(1).Exists]]</visible>
				</item>
			</menu>
		</menu>
	</extension>
	<extension point="xbmc.python.script" library="default.py">
		<provides>executable</provides>
	</extension>
	<!-- https://kodi.wiki/view/HOW-TO:Video_addon
	<extension point="xbmc.python.pluginsource" library="plugin.py">
		<provides>video</provides>
	</extension>
	-->
	<extension point="xbmc.addon.metadata">
		<summary lang="en_GB">summary</summary>
		<description lang="en_GB">description</description>
		<news></news>
		<source></source>
		<forum></forum>
		<license>GNU GENERAL PUBLIC LICENSE Version 2.0</license>
		<platform>all</platform>
		<assets>
			<icon>resources/icon.png</icon>
			<fanart>resources/fanart.jpg</fanart>
		</assets>
	</extension>
</addon>
<addon id="script.tvmelodies"
version="0.0.2"
name="TV Melodies"
provider-name="smitchell6879">
<requires>
  <import addon="xbmc.python" version="2.25.0"/>
</requires>
<extension point="xbmc.python.script" library="script.py"/>
<provides>video</provides>
<extension point="xbmc.service" library="service.py" start="[login]"/>
<extension point="xbmc.addon.metadata">
  <summary lang="en_GB"></summary>
  <description lang="en_GB"></description>
  <disclaimer lang="en_GB">Kodi 17/18 Required</disclaimer>
  <assets>
    <icon>resources/icon.png</icon>
    <!-- <fanart>resources/fanart.jpg</fanart> -->
  </assets>
  <news></news>
</extension>
</addon>
    </addons>
